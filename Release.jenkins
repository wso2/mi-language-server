pipeline{
  agent any
  tools {
    jdk 'adoptopenjdk-hotspot-jdk8-latest'
  }
  environment {
    MAVEN_HOME = "$WORKSPACE/.m2/"
    MAVEN_USER_HOME = "$MAVEN_HOME"
  }
  parameters {
      booleanParam(name: 'PERFORM_RELEASE', defaultValue: false, description: 'Perform a release?')
  }
  stages {
    stage("Maven Release"){
      steps {
        script {
          if (!params.PERFORM_RELEASE) {
            error('Not releasing')
          }
        }
        sshagent ( ['github-bot-ssh']) {
          withMaven {
            sh '''
                git config --global user.email "lemminx-bot@eclipse.org"
                git config --global user.name "LemMinX GitHub Bot"
                ./mvnw clean release:clean release:prepare -B
                ./mvnw clean release:perform -B
            '''
          }
        }
      }
    }
    stage('Deploy release to downloads.eclipse.org') {
      steps {
        sshagent ( ['projects-storage.eclipse.org-bot-ssh']) {
          sh '''
            base=./target/checkout/org.eclipse.lemminx/target/
            version=`cat ${base}/maven-archiver/pom.properties | grep "version" | cut -d'=' -f2`
            targetDir=/home/data/httpd/download.eclipse.org/lemminx/releases/${version}
            ssh genie.lemminx@projects-storage.eclipse.org mkdir -p $targetDir
            scp -r ${base}/org.eclipse.lemminx-* genie.lemminx@projects-storage.eclipse.org:$targetDir
            ssh genie.lemminx@projects-storage.eclipse.org unzip $targetDir/org.eclipse.lemminx-p2repo.zip -d $targetDir/repository
            '''
        }
      }
    }
  }
}